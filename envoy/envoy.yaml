admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:

  listeners:
    - name: jwt_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:

            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: route_0
                  virtual_hosts:
                    - name: my_virtual_host
                      domains:
                        - "*"
                      cors:
                        allow_origin_string_match:
                          - safe_regex:
                              regex: ".*"
                        allow_methods: GET, PUT, POST, DELETE, OPTIONS
                        allow_headers: "*"
                        expose_headers: "Authorization, content-length, content-type"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: backend-flask
                            timeout: 1s
                          typed_per_filter_config:
                             envoy.filters.http.cors:
                                "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                                allow_origin_string_match:
                                   - safe_regex:
                                       regex: ".*"
                                allow_methods: GET, PUT, POST, DELETE, OPTIONS
                                allow_headers: "*"
                                expose_headers: "Authorization, content-length, content-type"
                http_filters:
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        cognito_provider:
                          issuer: https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_cSQ42ZwgR
                          audiences:
                            - [] # Replace with your actual audience
                          remote_jwks:
                            http_uri:
                              uri: https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_cSQ42ZwgR/.well-known/jwks.json
                              cluster: cognito_jwks_cluster
                              timeout: 1s
                      rules:
                        - match:
                            prefix: "/api"
                          requires:
                            provider_name: cognito_provider
                          

                  
                  - name: envoy.filters.http.router
                    typed_config:
                       "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      format: |
                        [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% "%REQ(USER-AGENT)%" "%REQ(X-FORWARDED-FOR)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" "%DURATION%" "%REQ(X-REQUEST-ID)%" "%REQ(:PATH)%" "%REQ(X-ENVOY-EXTERNAL-ADDRESS)%"

  clusters:
    - name: cognito_jwks_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      dns_lookup_family: V4_ONLY
      transport_socket: # Added transport_socket configuration for TLS
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: cognito-idp.eu-central-1.amazonaws.com
      load_assignment:
        cluster_name: cognito_jwks_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: cognito-idp.eu-central-1.amazonaws.com
                      port_value: 443

    - name: backend-flask
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: backend-flask
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: backend-flask
                  port_value: 4567